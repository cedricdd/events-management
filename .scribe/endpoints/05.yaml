name: Authentication
description: |-

  Handles user authentication, including login and logout.
endpoints:
  -
    httpMethods:
      - DELETE
    uri: api/logout
    metadata:
      groupName: Authentication
      groupDescription: |-

        Handles user authentication, including login and logout.
      subgroup: ''
      subgroupDescription: ''
      title: Logout
      description: 'Logs out the authenticated user by deleting their current access token.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: ''
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Authentication
      groupDescription: |-

        Handles user authentication, including login and logout.
      subgroup: ''
      subgroupDescription: ''
      title: Login
      description: 'Handles user authentication by validating credentials and generating an access token.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: "The user's email address."
        required: true
        example: '"string@email.com"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: "The user's password."
        required: true
        example: '"password123"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: '"string@email.com"'
      password: '"password123"'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {"token": "Your Token.", "user": {
                  "id": 1,
                  "name": "John Doe",
                  "email": "john@doe.com",
                  "country": "USA",
                  "profession": "Programmer",
                  "phone": "123-456-789",
                  "organization": "World Incorporated",
                  "tokens": 100,
                  "tokens_spend": 100
              }}
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"message": "The provided credentials are incorrect."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
