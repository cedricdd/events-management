## Autogenerated by Scribe. DO NOT MODIFY.

name: Events
description: |-

  APIs for managing events.
endpoints:
  -
    httpMethods:
      - POST
    uri: api/events
    metadata:
      groupName: Events
      groupDescription: |-

        APIs for managing events.
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Event'
      description: 'Creates a new event. Only organizers and admins can create events.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the event. (Max 255 characters)'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'The description of the event. (Max 4096 characters)'
        required: true
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      start_date:
        name: start_date
        description: 'The start date & time of the event, it needs to be at least 96 hours in the future.<br/>'
        required: true
        example: '2025-01-31 08:00:00'
        type: date
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'The end date & time of the event, it needs to be set after the start date.<br/>'
        required: true
        example: '2025-02-10 20:30:00'
        type: date
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      location:
        name: location
        description: 'The location at which the event will take place.'
        required: true
        example: Online
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      cost:
        name: cost
        description: 'The amount of tokens each attendees will have to pay to join the event. [0;100]'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      public:
        name: public
        description: 'Is this event a public event, in which case any users will have the ability to join.'
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: 'The type of the event, it needs to be one of our existing event types.<br/>'
        required: true
        example: Conference
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: architecto
      description: 'Eius et animi quos velit et.'
      start_date: '2025-01-31 08:00:00'
      end_date: '2025-02-10 20:30:00'
      location: Online
      cost: 16
      public: false
      type: Conference
    fileParameters: []
    responses:
      -
        status: 201
        content: '{"data":{"id":1923,"name":"Et animi quos velit et fugiat.","description":"Accusantium harum mollitia modi deserunt aut ab. Perspiciatis quo omnis nostrum aut adipisci quidem nostrum qui. Incidunt iure odit et et modi ipsum.","location":"Online","cost":3,"start_date":"2025-07-31 16:00:00","end_date":"2025-08-17 21:30:00","type":"aut","public":"yes","organizer":{"id":7559,"name":"Carey Smitham","email":"sleffler@example.org","country":"Antarctica (the territory South of 60 deg S)","profession":"Bindery Machine Operator","phone":"(458) 539-0170","organization":"Gaylord, Hettinger and Nitzsche"}},"message":"Event created successfully"}'
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"message": "This action is unauthorized."}'
        headers: []
        description: ''
        custom: []
      -
        status: 409
        content: '{"message": "A similar event already exists!"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/events/{id}'
    metadata:
      groupName: Events
      groupDescription: |-

        APIs for managing events.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Event'
      description: |-
        Updates the specified event. Only the organizer or an admin can update an event.<br/>
        You can modify a single field or multiple fields at once.<br/>
        If some users have already paid for the event, only the name, description and the type can be modified.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the event to update.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the event. (Max 255 characters)'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'The description of the event. (Max 4096 characters)'
        required: false
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      start_date:
        name: start_date
        description: 'The start date & time of the event, it needs to be at least 96 hours in the future.<br/>'
        required: false
        example: '2025-01-31 08:00:00'
        type: date
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'The end date & time of the event, it needs to be set after the start date.<br/>'
        required: false
        example: '2025-02-10 20:30:00'
        type: date
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      location:
        name: location
        description: 'The location at which the event will take place.'
        required: false
        example: Online
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      cost:
        name: cost
        description: 'The amount of tokens each attendees will have to pay to join the event. [0;100]'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      public:
        name: public
        description: 'Is this event a public event, in which case any users will have the ability to join.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: 'The type of the event, it needs to be one of our existing event types.<br/>'
        required: false
        example: Conference
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: architecto
      description: 'Eius et animi quos velit et.'
      start_date: '2025-01-31 08:00:00'
      end_date: '2025-02-10 20:30:00'
      location: Online
      cost: 16
      public: false
      type: Conference
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1924,"name":"Et animi quos velit et fugiat.","description":"Accusantium harum mollitia modi deserunt aut ab. Perspiciatis quo omnis nostrum aut adipisci quidem nostrum qui. Incidunt iure odit et et modi ipsum.","location":"New Carey","cost":1,"start_date":"2025-07-19 06:00:00","end_date":"2025-08-12 21:00:00","type":"corporis","public":"yes","attendees_count":1,"organizer":{"id":7560,"name":"Henri Mitchell","email":"tleuschke@example.net","country":"Guatemala","profession":"Insurance Claims Clerk","phone":"559.897.7788","organization":"Klocko-Batz"}},"message":"Event updated successfully"}'
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"message": "This action is unauthorized."}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"message": "The start of this event is too close, modification are not allowed anymore!"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Event not found."}'
        headers: []
        description: ''
        custom: []
      -
        status: 409
        content: '{"message": "A similar event already exists!"}'
        headers: []
        description: ''
        custom: []
      -
        status: 409
        content: '{"message": "No changes were made to the event."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/events/{id}'
    metadata:
      groupName: Events
      groupDescription: |-

        APIs for managing events.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Event'
      description: |-
        Deletes the specified event. If the event has attendees, they will be refunded.<br/>
        If the event was supposed to start soon, only an admin can delete it.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the event to delete.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: null
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"message": "This action is unauthorized."}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"message": "The deletion of this event is not allowed anymore!"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Event not found."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/events
    metadata:
      groupName: Events
      groupDescription: |-

        APIs for managing events.
      subgroup: ''
      subgroupDescription: ''
      title: 'List Events'
      description: 'Display a listing of events. By default, it shows only upcoming events.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'The results are paginated, you will get 10 results per page.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      with:
        name: with
        description: 'The additional data to include in the response.'
        required: false
        example: organizer
        type: string
        enumValues:
          - organizer
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: "The sorting criteria for the events. Default is 'start,*order*'.<br/>Consisting of two parts, the sorting criteria and the sorting order (asc or desc)."
        required: false
        example: 'cost,desc'
        type: string
        enumValues:
          - 'start,*order*'
          - 'name,*order*'
          - 'end,*order*'
          - 'cost,*order*'
          - 'attendees,*order*'
          - 'newest,*order*'
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 2
      with: organizer
      sort: 'cost,desc'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1926,"name":"Et animi quos velit et fugiat.","description":"Accusantium harum mollitia modi deserunt aut ab. Perspiciatis quo omnis nostrum aut adipisci quidem nostrum qui. Incidunt iure odit et et modi ipsum.","location":"New Carey","cost":5,"start_date":"2025-07-19 06:00:00","end_date":"2025-07-19 09:00:00","type":"odit","public":"yes","attendees_count":1},{"id":1927,"name":"Quia perspiciatis deserunt ducimus corrupti et.","description":"Maiores assumenda odit doloribus repellat. Corporis nesciunt ut ratione iure impedit molestiae.","location":"Online","cost":5,"start_date":"2025-07-17 02:00:00","end_date":"2025-07-17 03:00:00","type":"et","public":"yes","attendees_count":1}],"links":{"first":"\/?page=1","last":"\/?page=1","prev":null,"next":null},"meta":{"current_page":1,"last_page":1,"path":"\/","per_page":10,"total":2}}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "The page 10 does not exist."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/events/search
    metadata:
      groupName: Events
      groupDescription: |-

        APIs for managing events.
      subgroup: ''
      subgroupDescription: ''
      title: 'Search Events'
      description: |-
        Searches for events based on various criteria such as name, description, location, cost, date, type, and organizer.
        You can filter events by a single field or multiple fields at once.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'The results are paginated, you will get 10 results per page.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      with:
        name: with
        description: 'The additional data to include in the response.'
        required: false
        example: organizer
        type: string
        enumValues:
          - organizer
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: "The sorting criteria for the events. Default is 'start,*order*'.<br/>Consisting of two parts, the sorting criteria and the sorting order (asc or desc)."
        required: false
        example: 'cost,desc'
        type: string
        enumValues:
          - 'start,*order*'
          - 'name,*order*'
          - 'end,*order*'
          - 'cost,*order*'
          - 'attendees,*order*'
          - 'newest,*order*'
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 2
      with: organizer
      sort: 'cost,desc'
    bodyParameters:
      name:
        name: name
        description: 'Find all events where the name contains this expression. (Max 255 characters)<br/>'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Find all events where the descritption contains this expression. (Max 255 characters)<br/>'
        required: false
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      location:
        name: location
        description: 'Find all events where the location contains this expression. (Max 255 characters)<br/>'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      cost_min:
        name: cost_min
        description: 'Find all events where the cost to join is at least the given value. [value, inf['
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      cost_max:
        name: cost_max
        description: 'Find all events where the cost to join is at max the given value. [0, value]'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      starts_before:
        name: starts_before
        description: 'Find all events where the start date is before or equal to this date. Date format: Y-m-d H:i:s<br/>'
        required: false
        example: '2025-12-25 12:30:00'
        type: date
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      starts_after:
        name: starts_after
        description: 'Find all events where the start date is after or equal to this date. Date format: Y-m-d H:i:s<br/>'
        required: false
        example: '2025-12-25 12:30:00'
        type: date
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      ends_before:
        name: ends_before
        description: 'Find all events where the end date is before or equal to this date. Date format: Y-m-d H:i:s<br/>'
        required: false
        example: '2025-12-25 12:30:00'
        type: date
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      ends_after:
        name: ends_after
        description: 'Find all events where the end date is after or equal to this date. Date format: Y-m-d H:i:s<br/>'
        required: false
        example: '2025-12-25 12:30:00'
        type: date
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: 'Find all events with the given type.'
        required: false
        example: Conference
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      attendees_min:
        name: attendees_min
        description: 'Find all events who have at least the given value of attendees. [value, inf['
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      attendees_max:
        name: attendees_max
        description: 'Find all events who have at max the given value of attendees. [0, value]'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      public:
        name: public
        description: 'Find all events who are either public or private.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      organizer:
        name: organizer
        description: 'Find all events who are associated with this organizer.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: architecto
      description: 'Eius et animi quos velit et.'
      location: architecto
      cost_min: 16
      cost_max: 16
      starts_before: '2025-12-25 12:30:00'
      starts_after: '2025-12-25 12:30:00'
      ends_before: '2025-12-25 12:30:00'
      ends_after: '2025-12-25 12:30:00'
      type: Conference
      attendees_min: 16
      attendees_max: 16
      public: false
      organizer: 16
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1928,"name":"Et animi quos velit et fugiat.","description":"Accusantium harum mollitia modi deserunt aut ab. Perspiciatis quo omnis nostrum aut adipisci quidem nostrum qui. Incidunt iure odit et et modi ipsum.","location":"New Carey","cost":1,"start_date":"2025-07-19 06:00:00","end_date":"2025-07-30 00:00:00","type":"veritatis","public":"yes","attendees_count":1},{"id":1929,"name":"Et dolores quia maiores.","description":"Doloribus repellat officiis corporis nesciunt ut ratione iure. Molestiae ut rem est esse. Aut molestiae sunt suscipit doloribus fugiat. Aut deserunt et error neque recusandae et. Dolorem et ut dicta.","location":"East Ellsworthtown","cost":1,"start_date":"2025-07-22 23:00:00","end_date":"2025-08-20 16:30:00","type":"assumenda","public":"yes","attendees_count":1}],"links":{"first":"\/?page=1","last":"\/?page=1","prev":null,"next":null},"meta":{"current_page":1,"last_page":1,"path":"\/","per_page":10,"total":2}}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "The page 10 does not exist."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/events/type/{eventType_name}'
    metadata:
      groupName: Events
      groupDescription: |-

        APIs for managing events.
      subgroup: ''
      subgroupDescription: ''
      title: 'Events by Type'
      description: 'Displays a list of events of a specific type.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      eventType_name:
        name: eventType_name
        description: 'The name of the type.'
        required: true
        example: Conference
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      eventType_name: Conference
    queryParameters:
      page:
        name: page
        description: 'The results are paginated, you will get 10 results per page.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      with:
        name: with
        description: 'The additional data to include in the response.'
        required: false
        example: organizer
        type: string
        enumValues:
          - organizer
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: "The sorting criteria for the events. Default is 'start,*order*'.<br/>Consisting of two parts, the sorting criteria and the sorting order (asc or desc)."
        required: false
        example: 'cost,desc'
        type: string
        enumValues:
          - 'start,*order*'
          - 'name,*order*'
          - 'end,*order*'
          - 'cost,*order*'
          - 'attendees,*order*'
          - 'newest,*order*'
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 2
      with: organizer
      sort: 'cost,desc'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1930,"name":"Et animi quos velit et fugiat.","description":"Accusantium harum mollitia modi deserunt aut ab. Perspiciatis quo omnis nostrum aut adipisci quidem nostrum qui. Incidunt iure odit et et modi ipsum.","location":"Online","cost":4,"start_date":"2025-07-31 16:00:00","end_date":"2025-08-09 19:00:00","type":"fugit","public":"yes","attendees_count":1},{"id":1931,"name":"Maiores assumenda odit doloribus repellat.","description":"Nesciunt ut ratione iure impedit molestiae ut rem. Esse sint aut molestiae sunt suscipit doloribus fugiat. Aut deserunt et error neque recusandae et. Dolorem et ut dicta.","location":"Online","cost":1,"start_date":"2025-07-29 10:30:00","end_date":"2025-08-22 17:00:00","type":"id","public":"yes","attendees_count":1}],"links":{"first":"\/?page=1","last":"\/?page=1","prev":null,"next":null},"meta":{"current_page":1,"last_page":1,"path":"\/","per_page":10,"total":2}}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "EventType not found."}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "The page 10 does not exist."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/events/organizer/{organizer_id}'
    metadata:
      groupName: Events
      groupDescription: |-

        APIs for managing events.
      subgroup: ''
      subgroupDescription: ''
      title: 'Events By Organizer'
      description: 'Lists all events created by a specific organizer.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      organizer_id:
        name: organizer_id
        description: 'The ID of the organizer.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      organizer_id: 1
    queryParameters:
      page:
        name: page
        description: 'The results are paginated, you will get 10 results per page.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      with:
        name: with
        description: 'The additional data to include in the response.'
        required: false
        example: organizer
        type: string
        enumValues:
          - organizer
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: "The sorting criteria for the events. Default is 'start,*order*'.<br/>Consisting of two parts, the sorting criteria and the sorting order (asc or desc)."
        required: false
        example: 'cost,desc'
        type: string
        enumValues:
          - 'start,*order*'
          - 'name,*order*'
          - 'end,*order*'
          - 'cost,*order*'
          - 'attendees,*order*'
          - 'newest,*order*'
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 2
      with: organizer
      sort: 'cost,desc'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1932,"name":"Et qui unde et.","description":"Non inventore iusto facere possimus. Consequatur qui amet quasi animi aut sequi. Voluptatem et sit quibusdam aut odio. Voluptates exercitationem est aperiam quis est nulla.","location":"Jakubowskimouth","cost":7,"start_date":"2025-07-26 04:30:00","end_date":"2025-08-11 00:00:00","type":"quasi","public":"yes","attendees_count":1},{"id":1933,"name":"Omnis totam aut et itaque nihil.","description":"Enim aut aut sequi saepe doloribus cupiditate. Labore quae quos ut in quos omnis quis. Aut quia voluptatem quasi voluptas. Maxime praesentium distinctio consectetur earum quis itaque. Architecto nihil distinctio molestiae dolore sunt ea.","location":"North Ciara","cost":3,"start_date":"2025-07-17 05:30:00","end_date":"2025-07-22 16:00:00","type":"enim","public":"yes","attendees_count":1}],"links":{"first":"\/?page=1","last":"\/?page=1","prev":null,"next":null},"meta":{"current_page":1,"last_page":1,"path":"\/","per_page":10,"total":2}}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "The page 10 does not exist."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/events/{id}'
    metadata:
      groupName: Events
      groupDescription: |-

        APIs for managing events.
      subgroup: ''
      subgroupDescription: ''
      title: 'Show Event'
      description: 'Display a specified event.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the event to display.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters:
      with:
        name: with
        description: 'The additional data to include in the response.'
        required: false
        example: organizer
        type: string
        enumValues:
          - organizer
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      with: organizer
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1934,"name":"Aut illum provident ea nam ducimus corrupti.","description":"Quis eos deleniti accusamus et ducimus. Esse dignissimos qui voluptate nihil qui. Eligendi perspiciatis voluptatibus iure molestias qui. Reiciendis deserunt suscipit commodi accusamus temporibus maxime.","location":"Online","cost":1,"start_date":"2025-07-18 14:30:00","end_date":"2025-08-02 13:00:00","type":"ab","public":"yes","attendees_count":1,"organizer":{"id":7586,"name":"Jarret Eichmann DDS","email":"ihagenes@example.org","country":"Brazil","profession":"Solderer","phone":"+1-415-709-3578","organization":"Murphy PLC"}}}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Event not found."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
