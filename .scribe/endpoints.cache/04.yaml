## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Event Types'
description: |-

  Handles event types, allowing administrators to create, update, and delete event types.
endpoints:
  -
    httpMethods:
      - POST
    uri: api/event-types
    metadata:
      groupName: 'Event Types'
      groupDescription: |-

        Handles event types, allowing administrators to create, update, and delete event types.
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Event Type'
      description: 'Creates a new event type. Only administrators can create event types.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the event type. (Max 255 characters)'
        required: true
        example: Concert
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'The description of the event type. (Max 4096 characters)'
        required: true
        example: Concert
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: Concert
      description: Concert
    fileParameters: []
    responses:
      -
        status: 201
        content: '{"data":{"id":385,"name":"sunt","description":"Accusantium harum mollitia modi deserunt aut ab."}}'
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"message": "This action is unauthorized."}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"message": "Event type already exists!"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/event-types/{type_id}'
    metadata:
      groupName: 'Event Types'
      groupDescription: |-

        Handles event types, allowing administrators to create, update, and delete event types.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Event Type'
      description: 'Updates an existing event type. Only administrators can update event types.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type_id:
        name: type_id
        description: 'The ID of the type'
        required: true
        example: '1'
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      type_id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the event type. (Max 255 characters)'
        required: true
        example: Concert
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'The description of the event type. (Max 4096 characters)'
        required: true
        example: Concert
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: Concert
      description: Concert
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":386,"name":"nihil","description":"Harum mollitia modi deserunt aut ab provident perspiciatis quo."}}'
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"message": "This action is unauthorized."}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"message": "Event type already exists!"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/event-types/{type_id}'
    metadata:
      groupName: 'Event Types'
      groupDescription: |-

        Handles event types, allowing administrators to create, update, and delete event types.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Event Type'
      description: 'Deletes an event type. A type cannot be deleted if it is used by any event.<br/>Only administrators can delete event types.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type_id:
        name: type_id
        description: 'The ID of the type'
        required: true
        example: '1'
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      type_id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: null
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"message": "This action is unauthorized."}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"message": "Cannot delete event type that is in use!"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/event-types
    metadata:
      groupName: 'Event Types'
      groupDescription: |-

        Handles event types, allowing administrators to create, update, and delete event types.
      subgroup: ''
      subgroupDescription: ''
      title: 'List Event Types'
      description: 'Lists all available event types.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":389,"name":"deleniti","description":"Eum doloremque id aut libero aliquam veniam corporis."},{"id":390,"name":"dolorem","description":"Deleniti nemo odit quia officia."}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
