openapi: 3.0.3
info:
  title: 'Events Management LLC API Documentation'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'https://events-management.test'
tags:
  -
    name: Attendee
    description: "\nHandles event attendees, allowing users to register, view, and unregister from events."
  -
    name: Authentication
    description: "\nHandles user authentication, including login and logout."
  -
    name: Bans
    description: ''
  -
    name: 'Event Invites'
    description: "\nHandles event invitations, allowing organizers to invite users to private events."
  -
    name: 'Event Types'
    description: "\nHandles event types, allowing administrators to create, update, and delete event types."
  -
    name: Events
    description: "\nAPIs for managing events."
  -
    name: 'User Management'
    description: "\nHandles user-related operations, including viewing user profiles."
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
paths:
  '/api/events/{event_id}/attendees':
    post:
      summary: 'Register To Event'
      operationId: registerToEvent
      description: 'Allows a user to register for an event, provided they meet the necessary conditions such as not being already registered, not being the organizer, having enough tokens, and being invited if the event is private.'
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1925
                    name: 'Et ex consequatur omnis quia velit.'
                    description: 'Aliquid dignissimos sunt ipsa est hic. Quas voluptatem unde occaecati quia.'
                    location: Online
                    cost: 1
                    start_date: '2025-07-13 10:00:00'
                    end_date: '2025-08-09 15:00:00'
                    type: quia
                    public: 'yes'
                    attendees_count: 1
                    organizer:
                      id: 7562
                      name: 'Maureen Eichmann'
                      email: jarod.block@example.com
                      country: Tunisia
                      profession: 'File Clerk'
                      phone: +1-323-773-9362
                      organization: 'Becker PLC'
                  message: 'You have successfully registered for the event.'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1925
                      name:
                        type: string
                        example: 'Et ex consequatur omnis quia velit.'
                      description:
                        type: string
                        example: 'Aliquid dignissimos sunt ipsa est hic. Quas voluptatem unde occaecati quia.'
                      location:
                        type: string
                        example: Online
                      cost:
                        type: integer
                        example: 1
                      start_date:
                        type: string
                        example: '2025-07-13 10:00:00'
                      end_date:
                        type: string
                        example: '2025-08-09 15:00:00'
                      type:
                        type: string
                        example: quia
                      public:
                        type: string
                        example: 'yes'
                      attendees_count:
                        type: integer
                        example: 1
                      organizer:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 7562
                          name:
                            type: string
                            example: 'Maureen Eichmann'
                          email:
                            type: string
                            example: jarod.block@example.com
                          country:
                            type: string
                            example: Tunisia
                          profession:
                            type: string
                            example: 'File Clerk'
                          phone:
                            type: string
                            example: +1-323-773-9362
                          organization:
                            type: string
                            example: 'Becker PLC'
                  message:
                    type: string
                    example: 'You have successfully registered for the event.'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      message: 'You can only register to an event before it start.'
                    properties:
                      message:
                        type: string
                        example: 'You can only register to an event before it start.'
                  -
                    description: ''
                    type: object
                    example:
                      message: 'You are not invited to this event.'
                    properties:
                      message:
                        type: string
                        example: 'You are not invited to this event.'
                  -
                    description: ''
                    type: object
                    example:
                      message: "You don't have enough tokens to register for this event."
                    properties:
                      message:
                        type: string
                        example: "You don't have enough tokens to register for this event."
                  -
                    description: ''
                    type: object
                    example:
                      message: 'The organizer of this event does not allow you to join the event.'
                    properties:
                      message:
                        type: string
                        example: 'The organizer of this event does not allow you to join the event.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Event not found.'
                properties:
                  message:
                    type: string
                    example: 'Event not found.'
        409:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      message: 'You are already registered for this event.'
                    properties:
                      message:
                        type: string
                        example: 'You are already registered for this event.'
                  -
                    description: ''
                    type: object
                    example:
                      message: "You can't register to your own event."
                    properties:
                      message:
                        type: string
                        example: "You can't register to your own event."
      tags:
        - Attendee
      security: []
    get:
      summary: 'Attendees From Event'
      operationId: attendeesFromEvent
      description: 'Shows a paginated list of attendees for a specific event, with optional sorting and additional event data.'
      parameters:
        -
          in: query
          name: page
          description: 'The results are paginated, you will get 20 results per page.'
          example: 2
          required: false
          schema:
            type: integer
            description: 'The results are paginated, you will get 20 results per page.'
            example: 2
            nullable: false
        -
          in: query
          name: sort
          description: "The sorting criteria for the attendees. Default is 'user,asc'.<br/>Consisting of two parts, the sorting criteria and the sorting order (asc or desc)."
          example: 'registration,desc'
          required: false
          schema:
            type: string
            description: "The sorting criteria for the attendees. Default is 'user,asc'.<br/>Consisting of two parts, the sorting criteria and the sorting order (asc or desc)."
            example: 'registration,desc'
            nullable: false
            enum:
              - 'name,*order*'
              - 'country,*order*'
              - 'registration,*order*'
        -
          in: query
          name: with
          description: 'The additional data to include in the response.'
          example: event
          required: false
          schema:
            type: string
            description: 'The additional data to include in the response.'
            example: event
            nullable: false
            enum:
              - event
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 7588
                      name: 'Henderson Lang'
                      email: fatima42@example.com
                      country: Hungary
                      profession: 'Health Technologist'
                      phone: '+14784345145'
                      organization: Howell-Tromp
                    -
                      id: 7589
                      name: 'Miss Marguerite Treutel Sr.'
                      email: breana74@example.org
                      country: Burundi
                      profession: 'Medical Appliance Technician'
                      phone: '+17608725341'
                      organization: 'Goyette and Sons'
                  links:
                    first: '/?page=1'
                    last: '/?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    last_page: 1
                    path: /
                    per_page: 20
                    total: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 7588
                        name: 'Henderson Lang'
                        email: fatima42@example.com
                        country: Hungary
                        profession: 'Health Technologist'
                        phone: '+14784345145'
                        organization: Howell-Tromp
                      -
                        id: 7589
                        name: 'Miss Marguerite Treutel Sr.'
                        email: breana74@example.org
                        country: Burundi
                        profession: 'Medical Appliance Technician'
                        phone: '+17608725341'
                        organization: 'Goyette and Sons'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 7588
                        name:
                          type: string
                          example: 'Henderson Lang'
                        email:
                          type: string
                          example: fatima42@example.com
                        country:
                          type: string
                          example: Hungary
                        profession:
                          type: string
                          example: 'Health Technologist'
                        phone:
                          type: string
                          example: '+14784345145'
                        organization:
                          type: string
                          example: Howell-Tromp
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: '/?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 20
                      total:
                        type: integer
                        example: 2
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      message: 'Event not found.'
                    properties:
                      message:
                        type: string
                        example: 'Event not found.'
                  -
                    description: ''
                    type: object
                    example:
                      message: 'The page 10 does not exist.'
                    properties:
                      message:
                        type: string
                        example: 'The page 10 does not exist.'
      tags:
        - Attendee
      security: []
    parameters:
      -
        in: path
        name: event_id
        description: 'The ID of the event to register for.'
        example: '1'
        required: true
        schema:
          type: integer
  '/api/events/{event_id}/attendees/{user}':
    delete:
      summary: 'Unregister From Event'
      operationId: unregisterFromEvent
      description: 'Allows a user to unregister from an event, provided they are registered and the request is made by the user themselves, the event organizer, or an admin.'
      parameters: []
      responses:
        204:
          description: ''
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      message: 'You are not registered to this event!'
                    properties:
                      message:
                        type: string
                        example: 'You are not registered to this event!'
                  -
                    description: ''
                    type: object
                    example:
                      message: 'You are not allowed to unregister this user from the event!'
                    properties:
                      message:
                        type: string
                        example: 'You are not allowed to unregister this user from the event!'
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      message: 'Event not found.'
                    properties:
                      message:
                        type: string
                        example: 'Event not found.'
                  -
                    description: ''
                    type: object
                    example:
                      message: 'User not found.'
                    properties:
                      message:
                        type: string
                        example: 'User not found.'
      tags:
        - Attendee
      security: []
    parameters:
      -
        in: path
        name: event_id
        description: 'The ID of the event to unregister from.'
        example: '1'
        required: true
        schema:
          type: integer
      -
        in: path
        name: user
        description: 'Optional parameter. The ID of the user to unregister. If not provided, the authenticated user will be unregistered.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '2'
  /api/logout:
    delete:
      summary: Logout
      operationId: logout
      description: 'Logs out the authenticated user by deleting their current access token.'
      parameters: []
      responses:
        204:
          description: ''
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Authentication
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Handles user authentication by validating credentials and generating an access token.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  token: 'Your Token.'
                  user:
                    id: 1
                    name: 'John Doe'
                    email: john@doe.com
                    country: USA
                    profession: Programmer
                    phone: 123-456-789
                    organization: 'World Incorporated'
                    tokens: 100
                    tokens_spend: 100
                properties:
                  token:
                    type: string
                    example: 'Your Token.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'John Doe'
                      email:
                        type: string
                        example: john@doe.com
                      country:
                        type: string
                        example: USA
                      profession:
                        type: string
                        example: Programmer
                      phone:
                        type: string
                        example: 123-456-789
                      organization:
                        type: string
                        example: 'World Incorporated'
                      tokens:
                        type: integer
                        example: 100
                      tokens_spend:
                        type: integer
                        example: 100
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The provided credentials are incorrect.'
                properties:
                  message:
                    type: string
                    example: 'The provided credentials are incorrect.'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: "The user's email address."
                  example: '"string@email.com"'
                  nullable: false
                password:
                  type: string
                  description: "The user's password."
                  example: '"password123"'
                  nullable: false
              required:
                - email
                - password
      security: []
  '/api/bans/{user}':
    get:
      summary: 'Users Banned'
      operationId: usersBanned
      description: "List all the users banned by the authenticated user or a specified user.\n* Only administrators can view other users' banned lists."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 7553
                      name: 'Morgan Hirthe'
                      email: dare.emelie@example.com
                      country: Peru
                      profession: 'Compliance Officers'
                      phone: 562.471.7515
                      organization: Mitchell-VonRueden
                    -
                      id: 7554
                      name: 'Dr. Grayson Glover'
                      email: schultz.audrey@example.org
                      country: 'French Polynesia'
                      profession: 'Extraction Worker'
                      phone: +1.518.885.7351
                      organization: 'Fahey, Cartwright and Balistreri'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 7553
                        name: 'Morgan Hirthe'
                        email: dare.emelie@example.com
                        country: Peru
                        profession: 'Compliance Officers'
                        phone: 562.471.7515
                        organization: Mitchell-VonRueden
                      -
                        id: 7554
                        name: 'Dr. Grayson Glover'
                        email: schultz.audrey@example.org
                        country: 'French Polynesia'
                        profession: 'Extraction Worker'
                        phone: +1.518.885.7351
                        organization: 'Fahey, Cartwright and Balistreri'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 7553
                        name:
                          type: string
                          example: 'Morgan Hirthe'
                        email:
                          type: string
                          example: dare.emelie@example.com
                        country:
                          type: string
                          example: Peru
                        profession:
                          type: string
                          example: 'Compliance Officers'
                        phone:
                          type: string
                          example: 562.471.7515
                        organization:
                          type: string
                          example: Mitchell-VonRueden
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: "You are not authorized to view this user's banned list."
                properties:
                  message:
                    type: string
                    example: "You are not authorized to view this user's banned list."
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Event not found.'
                properties:
                  message:
                    type: string
                    example: 'Event not found.'
      tags:
        - Bans
    parameters:
      -
        in: path
        name: user
        description: "Optional parameter. The ID of the user whose banned list to retrieve. If not specified, retrieves the authenticated user's banned list."
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '1'
  /api/bans:
    post:
      summary: 'Ban Users'
      operationId: banUsers
      description: "Add users to the authenticated user's banned list."
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 7555
                      name: 'Ms. Audra Crooks II'
                      email: gulgowski.asia@example.com
                      country: Peru
                      profession: 'Glass Blower'
                      phone: 843.428.7432
                      organization: 'Price Ltd'
                    -
                      id: 7556
                      name: 'Pearl Hauck Sr.'
                      email: alayna44@example.org
                      country: 'Saint Vincent and the Grenadines'
                      profession: 'Gas Distribution Plant Operator'
                      phone: 870-215-1024
                      organization: Leffler-Glover
                  message: 'Bans added successfully.'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 7555
                        name: 'Ms. Audra Crooks II'
                        email: gulgowski.asia@example.com
                        country: Peru
                        profession: 'Glass Blower'
                        phone: 843.428.7432
                        organization: 'Price Ltd'
                      -
                        id: 7556
                        name: 'Pearl Hauck Sr.'
                        email: alayna44@example.org
                        country: 'Saint Vincent and the Grenadines'
                        profession: 'Gas Distribution Plant Operator'
                        phone: 870-215-1024
                        organization: Leffler-Glover
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 7555
                        name:
                          type: string
                          example: 'Ms. Audra Crooks II'
                        email:
                          type: string
                          example: gulgowski.asia@example.com
                        country:
                          type: string
                          example: Peru
                        profession:
                          type: string
                          example: 'Glass Blower'
                        phone:
                          type: string
                          example: 843.428.7432
                        organization:
                          type: string
                          example: 'Price Ltd'
                  message:
                    type: string
                    example: 'Bans added successfully.'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Bans
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: array
                  description: 'The IDs of the users to ban.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: integer
              required:
                - users
    delete:
      summary: 'Unban Users'
      operationId: unbanUsers
      description: "Remove users from the authenticated user's banned list."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 7557
                      name: 'Ms. Audra Crooks II'
                      email: idickens@example.org
                      country: Morocco
                      profession: 'Copy Machine Operator'
                      phone: +1-626-249-0432
                      organization: Hauck-Leuschke
                    -
                      id: 7558
                      name: 'Alanis McLaughlin'
                      email: bauch.marcelo@example.com
                      country: 'Holy See (Vatican City State)'
                      profession: Illustrator
                      phone: 1-915-230-6227
                      organization: 'Schultz Group'
                  message: 'Bans removed successfully.'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 7557
                        name: 'Ms. Audra Crooks II'
                        email: idickens@example.org
                        country: Morocco
                        profession: 'Copy Machine Operator'
                        phone: +1-626-249-0432
                        organization: Hauck-Leuschke
                      -
                        id: 7558
                        name: 'Alanis McLaughlin'
                        email: bauch.marcelo@example.com
                        country: 'Holy See (Vatican City State)'
                        profession: Illustrator
                        phone: 1-915-230-6227
                        organization: 'Schultz Group'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 7557
                        name:
                          type: string
                          example: 'Ms. Audra Crooks II'
                        email:
                          type: string
                          example: idickens@example.org
                        country:
                          type: string
                          example: Morocco
                        profession:
                          type: string
                          example: 'Copy Machine Operator'
                        phone:
                          type: string
                          example: +1-626-249-0432
                        organization:
                          type: string
                          example: Hauck-Leuschke
                  message:
                    type: string
                    example: 'Bans removed successfully.'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Bans
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: array
                  description: 'The IDs of the users to ban.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: integer
              required:
                - users
  '/api/events/{event_id}/invites':
    get:
      summary: 'Invites From Event'
      operationId: invitesFromEvent
      description: 'Lists all users invited to a private event. You need to be the organizer of the event or an administrator to view the invites.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 7564
                      name: 'Morgan Hirthe'
                      email: imclaughlin@example.org
                      country: 'Saint Vincent and the Grenadines'
                      profession: 'Gas Distribution Plant Operator'
                      phone: 870-215-1024
                      organization: Leffler-Glover
                    -
                      id: 7565
                      name: 'Annette Labadie'
                      email: kconsidine@example.net
                      country: 'Holy See (Vatican City State)'
                      profession: 'Construction Equipment Operator'
                      phone: +1-678-651-3805
                      organization: Cartwright-Balistreri
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 7564
                        name: 'Morgan Hirthe'
                        email: imclaughlin@example.org
                        country: 'Saint Vincent and the Grenadines'
                        profession: 'Gas Distribution Plant Operator'
                        phone: 870-215-1024
                        organization: Leffler-Glover
                      -
                        id: 7565
                        name: 'Annette Labadie'
                        email: kconsidine@example.net
                        country: 'Holy See (Vatican City State)'
                        profession: 'Construction Equipment Operator'
                        phone: +1-678-651-3805
                        organization: Cartwright-Balistreri
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 7564
                        name:
                          type: string
                          example: 'Morgan Hirthe'
                        email:
                          type: string
                          example: imclaughlin@example.org
                        country:
                          type: string
                          example: 'Saint Vincent and the Grenadines'
                        profession:
                          type: string
                          example: 'Gas Distribution Plant Operator'
                        phone:
                          type: string
                          example: 870-215-1024
                        organization:
                          type: string
                          example: Leffler-Glover
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      message: 'This event is a public event, there are no invites.'
                    properties:
                      message:
                        type: string
                        example: 'This event is a public event, there are no invites.'
                  -
                    description: ''
                    type: object
                    example:
                      message: 'This action is unauthorized.'
                    properties:
                      message:
                        type: string
                        example: 'This action is unauthorized.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Event not found.'
                properties:
                  message:
                    type: string
                    example: 'Event not found.'
      tags:
        - 'Event Invites'
    post:
      summary: 'Invite To Event'
      operationId: inviteToEvent
      description: 'Allows the organizer of a private event to invite users to the event.'
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 7566
                      name: 'Ms. Audra Crooks II'
                      email: aschuster@example.com
                      country: Zambia
                      profession: 'Compacting Machine Operator'
                      phone: 253.392.8862
                      organization: 'McLaughlin, Leuschke and Bauch'
                    -
                      id: 7567
                      name: 'Mr. Oswald Koch'
                      email: bailee15@example.org
                      country: 'Heard Island and McDonald Islands'
                      profession: 'Chemical Plant Operator'
                      phone: 531-539-0170
                      organization: 'Gaylord, Hettinger and Nitzsche'
                  message: 'Invites created successfully.'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 7566
                        name: 'Ms. Audra Crooks II'
                        email: aschuster@example.com
                        country: Zambia
                        profession: 'Compacting Machine Operator'
                        phone: 253.392.8862
                        organization: 'McLaughlin, Leuschke and Bauch'
                      -
                        id: 7567
                        name: 'Mr. Oswald Koch'
                        email: bailee15@example.org
                        country: 'Heard Island and McDonald Islands'
                        profession: 'Chemical Plant Operator'
                        phone: 531-539-0170
                        organization: 'Gaylord, Hettinger and Nitzsche'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 7566
                        name:
                          type: string
                          example: 'Ms. Audra Crooks II'
                        email:
                          type: string
                          example: aschuster@example.com
                        country:
                          type: string
                          example: Zambia
                        profession:
                          type: string
                          example: 'Compacting Machine Operator'
                        phone:
                          type: string
                          example: 253.392.8862
                        organization:
                          type: string
                          example: 'McLaughlin, Leuschke and Bauch'
                  message:
                    type: string
                    example: 'Invites created successfully.'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      message: 'This action is unauthorized.'
                    properties:
                      message:
                        type: string
                        example: 'This action is unauthorized.'
                  -
                    description: ''
                    type: object
                    example:
                      message: 'You are not authorized to invite users to this event.'
                    properties:
                      message:
                        type: string
                        example: 'You are not authorized to invite users to this event.'
                  -
                    description: ''
                    type: object
                    example:
                      message: 'You cannot invite users to an event that has already started.'
                    properties:
                      message:
                        type: string
                        example: 'You cannot invite users to an event that has already started.'
                  -
                    description: ''
                    type: object
                    example:
                      message: 'You can only invite users to private events.'
                    properties:
                      message:
                        type: string
                        example: 'You can only invite users to private events.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Event not found.'
                properties:
                  message:
                    type: string
                    example: 'Event not found.'
      tags:
        - 'Event Invites'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: array
                  description: 'The IDs of the users to invite.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: integer
              required:
                - users
    delete:
      summary: 'Remove Invites'
      operationId: removeInvites
      description: 'Allows the organizer of a private event to remove invites for users.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 7568
                      name: 'Ms. Audra Crooks II'
                      email: gilbert32@example.com
                      country: Liechtenstein
                      profession: 'Registered Nurse'
                      phone: 364-447-5052
                      organization: 'Predovic Inc'
                    -
                      id: 7569
                      name: 'Myrtis Tromp'
                      email: nstokes@example.org
                      country: 'Solomon Islands'
                      profession: 'Extruding Machine Operator'
                      phone: 1-539-501-0782
                      organization: Nitzsche-Ankunding
                  message: 'Invites removed successfully.'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 7568
                        name: 'Ms. Audra Crooks II'
                        email: gilbert32@example.com
                        country: Liechtenstein
                        profession: 'Registered Nurse'
                        phone: 364-447-5052
                        organization: 'Predovic Inc'
                      -
                        id: 7569
                        name: 'Myrtis Tromp'
                        email: nstokes@example.org
                        country: 'Solomon Islands'
                        profession: 'Extruding Machine Operator'
                        phone: 1-539-501-0782
                        organization: Nitzsche-Ankunding
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 7568
                        name:
                          type: string
                          example: 'Ms. Audra Crooks II'
                        email:
                          type: string
                          example: gilbert32@example.com
                        country:
                          type: string
                          example: Liechtenstein
                        profession:
                          type: string
                          example: 'Registered Nurse'
                        phone:
                          type: string
                          example: 364-447-5052
                        organization:
                          type: string
                          example: 'Predovic Inc'
                  message:
                    type: string
                    example: 'Invites removed successfully.'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'This action is unauthorized.'
                properties:
                  message:
                    type: string
                    example: 'This action is unauthorized.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Event not found.'
                properties:
                  message:
                    type: string
                    example: 'Event not found.'
      tags:
        - 'Event Invites'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: array
                  description: 'The IDs of the users to invite.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: integer
              required:
                - users
    parameters:
      -
        in: path
        name: event_id
        description: 'The ID of the event for which to retrieve invites.'
        example: '1'
        required: true
        schema:
          type: integer
  /api/event-types:
    post:
      summary: 'Create Event Type'
      operationId: createEventType
      description: 'Creates a new event type. Only administrators can create event types.'
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1078
                    name: sunt
                    description: 'Accusantium harum mollitia modi deserunt aut ab.'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1078
                      name:
                        type: string
                        example: sunt
                      description:
                        type: string
                        example: 'Accusantium harum mollitia modi deserunt aut ab.'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'This action is unauthorized.'
                properties:
                  message:
                    type: string
                    example: 'This action is unauthorized.'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Event type already exists!'
                properties:
                  message:
                    type: string
                    example: 'Event type already exists!'
      tags:
        - 'Event Types'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the event type. (Max 255 characters)'
                  example: Concert
                  nullable: false
                description:
                  type: string
                  description: 'The description of the event type. (Max 4096 characters)'
                  example: Concert
                  nullable: false
              required:
                - name
                - description
    get:
      summary: 'List Event Types'
      operationId: listEventTypes
      description: 'Lists all available event types.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1089
                      name: saepe
                      description: 'Rem voluptatem tenetur totam laborum.'
                    -
                      id: 1090
                      name: officiis
                      description: 'Quia eligendi illo velit eos unde.'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1089
                        name: saepe
                        description: 'Rem voluptatem tenetur totam laborum.'
                      -
                        id: 1090
                        name: officiis
                        description: 'Quia eligendi illo velit eos unde.'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1089
                        name:
                          type: string
                          example: saepe
                        description:
                          type: string
                          example: 'Rem voluptatem tenetur totam laborum.'
      tags:
        - 'Event Types'
      security: []
  '/api/event-types/{type_id}':
    put:
      summary: 'Update Event Type'
      operationId: updateEventType
      description: 'Updates an existing event type. Only administrators can update event types.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1079
                    name: nihil
                    description: 'Harum mollitia modi deserunt aut ab provident perspiciatis quo.'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1079
                      name:
                        type: string
                        example: nihil
                      description:
                        type: string
                        example: 'Harum mollitia modi deserunt aut ab provident perspiciatis quo.'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'This action is unauthorized.'
                properties:
                  message:
                    type: string
                    example: 'This action is unauthorized.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'EventType not found.'
                properties:
                  message:
                    type: string
                    example: 'EventType not found.'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Event type already exists!'
                properties:
                  message:
                    type: string
                    example: 'Event type already exists!'
      tags:
        - 'Event Types'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the event type. (Max 255 characters)'
                  example: Concert
                  nullable: false
                description:
                  type: string
                  description: 'The description of the event type. (Max 4096 characters)'
                  example: Concert
                  nullable: false
              required:
                - name
                - description
    delete:
      summary: 'Delete Event Type'
      operationId: deleteEventType
      description: 'Deletes an event type. A type cannot be deleted if it is used by any event.<br/>Only administrators can delete event types.'
      parameters: []
      responses:
        204:
          description: ''
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'This action is unauthorized.'
                properties:
                  message:
                    type: string
                    example: 'This action is unauthorized.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'EventType not found.'
                properties:
                  message:
                    type: string
                    example: 'EventType not found.'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Cannot delete event type that is in use!'
                properties:
                  message:
                    type: string
                    example: 'Cannot delete event type that is in use!'
      tags:
        - 'Event Types'
    parameters:
      -
        in: path
        name: type_id
        description: 'The ID of the type'
        example: '1'
        required: true
        schema:
          type: integer
  /api/events:
    post:
      summary: 'Create Event'
      operationId: createEvent
      description: 'Creates a new event. Only organizers and admins can create events.'
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1923
                    name: 'Et animi quos velit et fugiat.'
                    description: 'Accusantium harum mollitia modi deserunt aut ab. Perspiciatis quo omnis nostrum aut adipisci quidem nostrum qui. Incidunt iure odit et et modi ipsum.'
                    location: Online
                    cost: 3
                    start_date: '2025-07-31 16:00:00'
                    end_date: '2025-08-17 21:30:00'
                    type: aut
                    public: 'yes'
                    organizer:
                      id: 7559
                      name: 'Carey Smitham'
                      email: sleffler@example.org
                      country: 'Antarctica (the territory South of 60 deg S)'
                      profession: 'Bindery Machine Operator'
                      phone: '(458) 539-0170'
                      organization: 'Gaylord, Hettinger and Nitzsche'
                  message: 'Event created successfully'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1923
                      name:
                        type: string
                        example: 'Et animi quos velit et fugiat.'
                      description:
                        type: string
                        example: 'Accusantium harum mollitia modi deserunt aut ab. Perspiciatis quo omnis nostrum aut adipisci quidem nostrum qui. Incidunt iure odit et et modi ipsum.'
                      location:
                        type: string
                        example: Online
                      cost:
                        type: integer
                        example: 3
                      start_date:
                        type: string
                        example: '2025-07-31 16:00:00'
                      end_date:
                        type: string
                        example: '2025-08-17 21:30:00'
                      type:
                        type: string
                        example: aut
                      public:
                        type: string
                        example: 'yes'
                      organizer:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 7559
                          name:
                            type: string
                            example: 'Carey Smitham'
                          email:
                            type: string
                            example: sleffler@example.org
                          country:
                            type: string
                            example: 'Antarctica (the territory South of 60 deg S)'
                          profession:
                            type: string
                            example: 'Bindery Machine Operator'
                          phone:
                            type: string
                            example: '(458) 539-0170'
                          organization:
                            type: string
                            example: 'Gaylord, Hettinger and Nitzsche'
                  message:
                    type: string
                    example: 'Event created successfully'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'This action is unauthorized.'
                properties:
                  message:
                    type: string
                    example: 'This action is unauthorized.'
        409:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'A similar event already exists!'
                properties:
                  message:
                    type: string
                    example: 'A similar event already exists!'
      tags:
        - Events
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the event. (Max 255 characters)'
                  example: architecto
                  nullable: false
                description:
                  type: string
                  description: 'The description of the event. (Max 4096 characters)'
                  example: 'Eius et animi quos velit et.'
                  nullable: false
                start_date:
                  type: date
                  description: 'The start date & time of the event, it needs to be at least 96 hours in the future.<br/>'
                  example: '2025-01-31 08:00:00'
                  nullable: false
                end_date:
                  type: date
                  description: 'The end date & time of the event, it needs to be set after the start date.<br/>'
                  example: '2025-02-10 20:30:00'
                  nullable: false
                location:
                  type: string
                  description: 'The location at which the event will take place.'
                  example: Online
                  nullable: false
                cost:
                  type: integer
                  description: 'The amount of tokens each attendees will have to pay to join the event. [0;100]'
                  example: 16
                  nullable: false
                public:
                  type: boolean
                  description: 'Is this event a public event, in which case any users will have the ability to join.'
                  example: false
                  nullable: false
                type:
                  type: string
                  description: 'The type of the event, it needs to be one of our existing event types.<br/>'
                  example: Conference
                  nullable: false
              required:
                - name
                - description
                - start_date
                - end_date
                - location
                - cost
                - public
                - type
    get:
      summary: 'List Events'
      operationId: listEvents
      description: 'Display a listing of events. By default, it shows only upcoming events.'
      parameters:
        -
          in: query
          name: page
          description: 'The results are paginated, you will get 10 results per page.'
          example: 2
          required: false
          schema:
            type: integer
            description: 'The results are paginated, you will get 10 results per page.'
            example: 2
            nullable: false
        -
          in: query
          name: with
          description: 'The additional data to include in the response.'
          example: organizer
          required: false
          schema:
            type: string
            description: 'The additional data to include in the response.'
            example: organizer
            nullable: false
            enum:
              - organizer
        -
          in: query
          name: sort
          description: "The sorting criteria for the events. Default is 'start,*order*'.<br/>Consisting of two parts, the sorting criteria and the sorting order (asc or desc)."
          example: 'cost,desc'
          required: false
          schema:
            type: string
            description: "The sorting criteria for the events. Default is 'start,*order*'.<br/>Consisting of two parts, the sorting criteria and the sorting order (asc or desc)."
            example: 'cost,desc'
            nullable: false
            enum:
              - 'start,*order*'
              - 'name,*order*'
              - 'end,*order*'
              - 'cost,*order*'
              - 'attendees,*order*'
              - 'newest,*order*'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1926
                      name: 'Et animi quos velit et fugiat.'
                      description: 'Accusantium harum mollitia modi deserunt aut ab. Perspiciatis quo omnis nostrum aut adipisci quidem nostrum qui. Incidunt iure odit et et modi ipsum.'
                      location: 'New Carey'
                      cost: 5
                      start_date: '2025-07-19 06:00:00'
                      end_date: '2025-07-19 09:00:00'
                      type: odit
                      public: 'yes'
                      attendees_count: 1
                    -
                      id: 1927
                      name: 'Quia perspiciatis deserunt ducimus corrupti et.'
                      description: 'Maiores assumenda odit doloribus repellat. Corporis nesciunt ut ratione iure impedit molestiae.'
                      location: Online
                      cost: 5
                      start_date: '2025-07-17 02:00:00'
                      end_date: '2025-07-17 03:00:00'
                      type: et
                      public: 'yes'
                      attendees_count: 1
                  links:
                    first: '/?page=1'
                    last: '/?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    last_page: 1
                    path: /
                    per_page: 10
                    total: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1926
                        name: 'Et animi quos velit et fugiat.'
                        description: 'Accusantium harum mollitia modi deserunt aut ab. Perspiciatis quo omnis nostrum aut adipisci quidem nostrum qui. Incidunt iure odit et et modi ipsum.'
                        location: 'New Carey'
                        cost: 5
                        start_date: '2025-07-19 06:00:00'
                        end_date: '2025-07-19 09:00:00'
                        type: odit
                        public: 'yes'
                        attendees_count: 1
                      -
                        id: 1927
                        name: 'Quia perspiciatis deserunt ducimus corrupti et.'
                        description: 'Maiores assumenda odit doloribus repellat. Corporis nesciunt ut ratione iure impedit molestiae.'
                        location: Online
                        cost: 5
                        start_date: '2025-07-17 02:00:00'
                        end_date: '2025-07-17 03:00:00'
                        type: et
                        public: 'yes'
                        attendees_count: 1
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1926
                        name:
                          type: string
                          example: 'Et animi quos velit et fugiat.'
                        description:
                          type: string
                          example: 'Accusantium harum mollitia modi deserunt aut ab. Perspiciatis quo omnis nostrum aut adipisci quidem nostrum qui. Incidunt iure odit et et modi ipsum.'
                        location:
                          type: string
                          example: 'New Carey'
                        cost:
                          type: integer
                          example: 5
                        start_date:
                          type: string
                          example: '2025-07-19 06:00:00'
                        end_date:
                          type: string
                          example: '2025-07-19 09:00:00'
                        type:
                          type: string
                          example: odit
                        public:
                          type: string
                          example: 'yes'
                        attendees_count:
                          type: integer
                          example: 1
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: '/?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 10
                      total:
                        type: integer
                        example: 2
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The page 10 does not exist.'
                properties:
                  message:
                    type: string
                    example: 'The page 10 does not exist.'
      tags:
        - Events
      security: []
  '/api/events/{id}':
    put:
      summary: 'Update Event'
      operationId: updateEvent
      description: "Updates the specified event. Only the organizer or an admin can update an event.<br/>\nYou can modify a single field or multiple fields at once.<br/>\nIf some users have already paid for the event, only the name, description and the type can be modified."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1924
                    name: 'Et animi quos velit et fugiat.'
                    description: 'Accusantium harum mollitia modi deserunt aut ab. Perspiciatis quo omnis nostrum aut adipisci quidem nostrum qui. Incidunt iure odit et et modi ipsum.'
                    location: 'New Carey'
                    cost: 1
                    start_date: '2025-07-19 06:00:00'
                    end_date: '2025-08-12 21:00:00'
                    type: corporis
                    public: 'yes'
                    attendees_count: 1
                    organizer:
                      id: 7560
                      name: 'Henri Mitchell'
                      email: tleuschke@example.net
                      country: Guatemala
                      profession: 'Insurance Claims Clerk'
                      phone: 559.897.7788
                      organization: Klocko-Batz
                  message: 'Event updated successfully'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1924
                      name:
                        type: string
                        example: 'Et animi quos velit et fugiat.'
                      description:
                        type: string
                        example: 'Accusantium harum mollitia modi deserunt aut ab. Perspiciatis quo omnis nostrum aut adipisci quidem nostrum qui. Incidunt iure odit et et modi ipsum.'
                      location:
                        type: string
                        example: 'New Carey'
                      cost:
                        type: integer
                        example: 1
                      start_date:
                        type: string
                        example: '2025-07-19 06:00:00'
                      end_date:
                        type: string
                        example: '2025-08-12 21:00:00'
                      type:
                        type: string
                        example: corporis
                      public:
                        type: string
                        example: 'yes'
                      attendees_count:
                        type: integer
                        example: 1
                      organizer:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 7560
                          name:
                            type: string
                            example: 'Henri Mitchell'
                          email:
                            type: string
                            example: tleuschke@example.net
                          country:
                            type: string
                            example: Guatemala
                          profession:
                            type: string
                            example: 'Insurance Claims Clerk'
                          phone:
                            type: string
                            example: 559.897.7788
                          organization:
                            type: string
                            example: Klocko-Batz
                  message:
                    type: string
                    example: 'Event updated successfully'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      message: 'This action is unauthorized.'
                    properties:
                      message:
                        type: string
                        example: 'This action is unauthorized.'
                  -
                    description: ''
                    type: object
                    example:
                      message: 'The start of this event is too close, modification are not allowed anymore!'
                    properties:
                      message:
                        type: string
                        example: 'The start of this event is too close, modification are not allowed anymore!'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Event not found.'
                properties:
                  message:
                    type: string
                    example: 'Event not found.'
        409:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      message: 'A similar event already exists!'
                    properties:
                      message:
                        type: string
                        example: 'A similar event already exists!'
                  -
                    description: ''
                    type: object
                    example:
                      message: 'No changes were made to the event.'
                    properties:
                      message:
                        type: string
                        example: 'No changes were made to the event.'
      tags:
        - Events
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the event. (Max 255 characters)'
                  example: architecto
                  nullable: false
                description:
                  type: string
                  description: 'The description of the event. (Max 4096 characters)'
                  example: 'Eius et animi quos velit et.'
                  nullable: false
                start_date:
                  type: date
                  description: 'The start date & time of the event, it needs to be at least 96 hours in the future.<br/>'
                  example: '2025-01-31 08:00:00'
                  nullable: false
                end_date:
                  type: date
                  description: 'The end date & time of the event, it needs to be set after the start date.<br/>'
                  example: '2025-02-10 20:30:00'
                  nullable: false
                location:
                  type: string
                  description: 'The location at which the event will take place.'
                  example: Online
                  nullable: false
                cost:
                  type: integer
                  description: 'The amount of tokens each attendees will have to pay to join the event. [0;100]'
                  example: 16
                  nullable: false
                public:
                  type: boolean
                  description: 'Is this event a public event, in which case any users will have the ability to join.'
                  example: false
                  nullable: false
                type:
                  type: string
                  description: 'The type of the event, it needs to be one of our existing event types.<br/>'
                  example: Conference
                  nullable: false
    delete:
      summary: 'Delete Event'
      operationId: deleteEvent
      description: "Deletes the specified event. If the event has attendees, they will be refunded.<br/>\nIf the event was supposed to start soon, only an admin can delete it."
      parameters: []
      responses:
        204:
          description: ''
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      message: 'This action is unauthorized.'
                    properties:
                      message:
                        type: string
                        example: 'This action is unauthorized.'
                  -
                    description: ''
                    type: object
                    example:
                      message: 'The deletion of this event is not allowed anymore!'
                    properties:
                      message:
                        type: string
                        example: 'The deletion of this event is not allowed anymore!'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Event not found.'
                properties:
                  message:
                    type: string
                    example: 'Event not found.'
      tags:
        - Events
    get:
      summary: 'Show Event'
      operationId: showEvent
      description: 'Display a specified event.'
      parameters:
        -
          in: query
          name: with
          description: 'The additional data to include in the response.'
          example: organizer
          required: false
          schema:
            type: string
            description: 'The additional data to include in the response.'
            example: organizer
            nullable: false
            enum:
              - organizer
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1934
                    name: 'Aut illum provident ea nam ducimus corrupti.'
                    description: 'Quis eos deleniti accusamus et ducimus. Esse dignissimos qui voluptate nihil qui. Eligendi perspiciatis voluptatibus iure molestias qui. Reiciendis deserunt suscipit commodi accusamus temporibus maxime.'
                    location: Online
                    cost: 1
                    start_date: '2025-07-18 14:30:00'
                    end_date: '2025-08-02 13:00:00'
                    type: ab
                    public: 'yes'
                    attendees_count: 1
                    organizer:
                      id: 7586
                      name: 'Jarret Eichmann DDS'
                      email: ihagenes@example.org
                      country: Brazil
                      profession: Solderer
                      phone: +1-415-709-3578
                      organization: 'Murphy PLC'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1934
                      name:
                        type: string
                        example: 'Aut illum provident ea nam ducimus corrupti.'
                      description:
                        type: string
                        example: 'Quis eos deleniti accusamus et ducimus. Esse dignissimos qui voluptate nihil qui. Eligendi perspiciatis voluptatibus iure molestias qui. Reiciendis deserunt suscipit commodi accusamus temporibus maxime.'
                      location:
                        type: string
                        example: Online
                      cost:
                        type: integer
                        example: 1
                      start_date:
                        type: string
                        example: '2025-07-18 14:30:00'
                      end_date:
                        type: string
                        example: '2025-08-02 13:00:00'
                      type:
                        type: string
                        example: ab
                      public:
                        type: string
                        example: 'yes'
                      attendees_count:
                        type: integer
                        example: 1
                      organizer:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 7586
                          name:
                            type: string
                            example: 'Jarret Eichmann DDS'
                          email:
                            type: string
                            example: ihagenes@example.org
                          country:
                            type: string
                            example: Brazil
                          profession:
                            type: string
                            example: Solderer
                          phone:
                            type: string
                            example: +1-415-709-3578
                          organization:
                            type: string
                            example: 'Murphy PLC'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Event not found.'
                properties:
                  message:
                    type: string
                    example: 'Event not found.'
      tags:
        - Events
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the event to update.'
        example: 1
        required: true
        schema:
          type: integer
  /api/events/search:
    get:
      summary: 'Search Events'
      operationId: searchEvents
      description: "Searches for events based on various criteria such as name, description, location, cost, date, type, and organizer.\nYou can filter events by a single field or multiple fields at once."
      parameters:
        -
          in: query
          name: page
          description: 'The results are paginated, you will get 10 results per page.'
          example: 2
          required: false
          schema:
            type: integer
            description: 'The results are paginated, you will get 10 results per page.'
            example: 2
            nullable: false
        -
          in: query
          name: with
          description: 'The additional data to include in the response.'
          example: organizer
          required: false
          schema:
            type: string
            description: 'The additional data to include in the response.'
            example: organizer
            nullable: false
            enum:
              - organizer
        -
          in: query
          name: sort
          description: "The sorting criteria for the events. Default is 'start,*order*'.<br/>Consisting of two parts, the sorting criteria and the sorting order (asc or desc)."
          example: 'cost,desc'
          required: false
          schema:
            type: string
            description: "The sorting criteria for the events. Default is 'start,*order*'.<br/>Consisting of two parts, the sorting criteria and the sorting order (asc or desc)."
            example: 'cost,desc'
            nullable: false
            enum:
              - 'start,*order*'
              - 'name,*order*'
              - 'end,*order*'
              - 'cost,*order*'
              - 'attendees,*order*'
              - 'newest,*order*'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1928
                      name: 'Et animi quos velit et fugiat.'
                      description: 'Accusantium harum mollitia modi deserunt aut ab. Perspiciatis quo omnis nostrum aut adipisci quidem nostrum qui. Incidunt iure odit et et modi ipsum.'
                      location: 'New Carey'
                      cost: 1
                      start_date: '2025-07-19 06:00:00'
                      end_date: '2025-07-30 00:00:00'
                      type: veritatis
                      public: 'yes'
                      attendees_count: 1
                    -
                      id: 1929
                      name: 'Et dolores quia maiores.'
                      description: 'Doloribus repellat officiis corporis nesciunt ut ratione iure. Molestiae ut rem est esse. Aut molestiae sunt suscipit doloribus fugiat. Aut deserunt et error neque recusandae et. Dolorem et ut dicta.'
                      location: 'East Ellsworthtown'
                      cost: 1
                      start_date: '2025-07-22 23:00:00'
                      end_date: '2025-08-20 16:30:00'
                      type: assumenda
                      public: 'yes'
                      attendees_count: 1
                  links:
                    first: '/?page=1'
                    last: '/?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    last_page: 1
                    path: /
                    per_page: 10
                    total: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1928
                        name: 'Et animi quos velit et fugiat.'
                        description: 'Accusantium harum mollitia modi deserunt aut ab. Perspiciatis quo omnis nostrum aut adipisci quidem nostrum qui. Incidunt iure odit et et modi ipsum.'
                        location: 'New Carey'
                        cost: 1
                        start_date: '2025-07-19 06:00:00'
                        end_date: '2025-07-30 00:00:00'
                        type: veritatis
                        public: 'yes'
                        attendees_count: 1
                      -
                        id: 1929
                        name: 'Et dolores quia maiores.'
                        description: 'Doloribus repellat officiis corporis nesciunt ut ratione iure. Molestiae ut rem est esse. Aut molestiae sunt suscipit doloribus fugiat. Aut deserunt et error neque recusandae et. Dolorem et ut dicta.'
                        location: 'East Ellsworthtown'
                        cost: 1
                        start_date: '2025-07-22 23:00:00'
                        end_date: '2025-08-20 16:30:00'
                        type: assumenda
                        public: 'yes'
                        attendees_count: 1
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1928
                        name:
                          type: string
                          example: 'Et animi quos velit et fugiat.'
                        description:
                          type: string
                          example: 'Accusantium harum mollitia modi deserunt aut ab. Perspiciatis quo omnis nostrum aut adipisci quidem nostrum qui. Incidunt iure odit et et modi ipsum.'
                        location:
                          type: string
                          example: 'New Carey'
                        cost:
                          type: integer
                          example: 1
                        start_date:
                          type: string
                          example: '2025-07-19 06:00:00'
                        end_date:
                          type: string
                          example: '2025-07-30 00:00:00'
                        type:
                          type: string
                          example: veritatis
                        public:
                          type: string
                          example: 'yes'
                        attendees_count:
                          type: integer
                          example: 1
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: '/?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 10
                      total:
                        type: integer
                        example: 2
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The page 10 does not exist.'
                properties:
                  message:
                    type: string
                    example: 'The page 10 does not exist.'
      tags:
        - Events
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Find all events where the name contains this expression. (Max 255 characters)<br/>'
                  example: architecto
                  nullable: false
                description:
                  type: string
                  description: 'Find all events where the descritption contains this expression. (Max 255 characters)<br/>'
                  example: 'Eius et animi quos velit et.'
                  nullable: false
                location:
                  type: string
                  description: 'Find all events where the location contains this expression. (Max 255 characters)<br/>'
                  example: architecto
                  nullable: false
                cost_min:
                  type: integer
                  description: 'Find all events where the cost to join is at least the given value. [value, inf['
                  example: 16
                  nullable: false
                cost_max:
                  type: integer
                  description: 'Find all events where the cost to join is at max the given value. [0, value]'
                  example: 16
                  nullable: false
                starts_before:
                  type: date
                  description: 'Find all events where the start date is before or equal to this date. Date format: Y-m-d H:i:s<br/>'
                  example: '2025-12-25 12:30:00'
                  nullable: false
                starts_after:
                  type: date
                  description: 'Find all events where the start date is after or equal to this date. Date format: Y-m-d H:i:s<br/>'
                  example: '2025-12-25 12:30:00'
                  nullable: false
                ends_before:
                  type: date
                  description: 'Find all events where the end date is before or equal to this date. Date format: Y-m-d H:i:s<br/>'
                  example: '2025-12-25 12:30:00'
                  nullable: false
                ends_after:
                  type: date
                  description: 'Find all events where the end date is after or equal to this date. Date format: Y-m-d H:i:s<br/>'
                  example: '2025-12-25 12:30:00'
                  nullable: false
                type:
                  type: string
                  description: 'Find all events with the given type.'
                  example: Conference
                  nullable: false
                attendees_min:
                  type: integer
                  description: 'Find all events who have at least the given value of attendees. [value, inf['
                  example: 16
                  nullable: false
                attendees_max:
                  type: integer
                  description: 'Find all events who have at max the given value of attendees. [0, value]'
                  example: 16
                  nullable: false
                public:
                  type: boolean
                  description: 'Find all events who are either public or private.'
                  example: false
                  nullable: false
                organizer:
                  type: integer
                  description: 'Find all events who are associated with this organizer.'
                  example: 16
                  nullable: false
      security: []
  '/api/events/type/{eventType_name}':
    get:
      summary: 'Events by Type'
      operationId: eventsByType
      description: 'Displays a list of events of a specific type.'
      parameters:
        -
          in: query
          name: page
          description: 'The results are paginated, you will get 10 results per page.'
          example: 2
          required: false
          schema:
            type: integer
            description: 'The results are paginated, you will get 10 results per page.'
            example: 2
            nullable: false
        -
          in: query
          name: with
          description: 'The additional data to include in the response.'
          example: organizer
          required: false
          schema:
            type: string
            description: 'The additional data to include in the response.'
            example: organizer
            nullable: false
            enum:
              - organizer
        -
          in: query
          name: sort
          description: "The sorting criteria for the events. Default is 'start,*order*'.<br/>Consisting of two parts, the sorting criteria and the sorting order (asc or desc)."
          example: 'cost,desc'
          required: false
          schema:
            type: string
            description: "The sorting criteria for the events. Default is 'start,*order*'.<br/>Consisting of two parts, the sorting criteria and the sorting order (asc or desc)."
            example: 'cost,desc'
            nullable: false
            enum:
              - 'start,*order*'
              - 'name,*order*'
              - 'end,*order*'
              - 'cost,*order*'
              - 'attendees,*order*'
              - 'newest,*order*'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1930
                      name: 'Et animi quos velit et fugiat.'
                      description: 'Accusantium harum mollitia modi deserunt aut ab. Perspiciatis quo omnis nostrum aut adipisci quidem nostrum qui. Incidunt iure odit et et modi ipsum.'
                      location: Online
                      cost: 4
                      start_date: '2025-07-31 16:00:00'
                      end_date: '2025-08-09 19:00:00'
                      type: fugit
                      public: 'yes'
                      attendees_count: 1
                    -
                      id: 1931
                      name: 'Maiores assumenda odit doloribus repellat.'
                      description: 'Nesciunt ut ratione iure impedit molestiae ut rem. Esse sint aut molestiae sunt suscipit doloribus fugiat. Aut deserunt et error neque recusandae et. Dolorem et ut dicta.'
                      location: Online
                      cost: 1
                      start_date: '2025-07-29 10:30:00'
                      end_date: '2025-08-22 17:00:00'
                      type: id
                      public: 'yes'
                      attendees_count: 1
                  links:
                    first: '/?page=1'
                    last: '/?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    last_page: 1
                    path: /
                    per_page: 10
                    total: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1930
                        name: 'Et animi quos velit et fugiat.'
                        description: 'Accusantium harum mollitia modi deserunt aut ab. Perspiciatis quo omnis nostrum aut adipisci quidem nostrum qui. Incidunt iure odit et et modi ipsum.'
                        location: Online
                        cost: 4
                        start_date: '2025-07-31 16:00:00'
                        end_date: '2025-08-09 19:00:00'
                        type: fugit
                        public: 'yes'
                        attendees_count: 1
                      -
                        id: 1931
                        name: 'Maiores assumenda odit doloribus repellat.'
                        description: 'Nesciunt ut ratione iure impedit molestiae ut rem. Esse sint aut molestiae sunt suscipit doloribus fugiat. Aut deserunt et error neque recusandae et. Dolorem et ut dicta.'
                        location: Online
                        cost: 1
                        start_date: '2025-07-29 10:30:00'
                        end_date: '2025-08-22 17:00:00'
                        type: id
                        public: 'yes'
                        attendees_count: 1
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1930
                        name:
                          type: string
                          example: 'Et animi quos velit et fugiat.'
                        description:
                          type: string
                          example: 'Accusantium harum mollitia modi deserunt aut ab. Perspiciatis quo omnis nostrum aut adipisci quidem nostrum qui. Incidunt iure odit et et modi ipsum.'
                        location:
                          type: string
                          example: Online
                        cost:
                          type: integer
                          example: 4
                        start_date:
                          type: string
                          example: '2025-07-31 16:00:00'
                        end_date:
                          type: string
                          example: '2025-08-09 19:00:00'
                        type:
                          type: string
                          example: fugit
                        public:
                          type: string
                          example: 'yes'
                        attendees_count:
                          type: integer
                          example: 1
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: '/?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 10
                      total:
                        type: integer
                        example: 2
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      message: 'EventType not found.'
                    properties:
                      message:
                        type: string
                        example: 'EventType not found.'
                  -
                    description: ''
                    type: object
                    example:
                      message: 'The page 10 does not exist.'
                    properties:
                      message:
                        type: string
                        example: 'The page 10 does not exist.'
      tags:
        - Events
      security: []
    parameters:
      -
        in: path
        name: eventType_name
        description: 'The name of the type.'
        example: Conference
        required: true
        schema:
          type: string
  '/api/events/organizer/{organizer_id}':
    get:
      summary: 'Events By Organizer'
      operationId: eventsByOrganizer
      description: 'Lists all events created by a specific organizer.'
      parameters:
        -
          in: query
          name: page
          description: 'The results are paginated, you will get 10 results per page.'
          example: 2
          required: false
          schema:
            type: integer
            description: 'The results are paginated, you will get 10 results per page.'
            example: 2
            nullable: false
        -
          in: query
          name: with
          description: 'The additional data to include in the response.'
          example: organizer
          required: false
          schema:
            type: string
            description: 'The additional data to include in the response.'
            example: organizer
            nullable: false
            enum:
              - organizer
        -
          in: query
          name: sort
          description: "The sorting criteria for the events. Default is 'start,*order*'.<br/>Consisting of two parts, the sorting criteria and the sorting order (asc or desc)."
          example: 'cost,desc'
          required: false
          schema:
            type: string
            description: "The sorting criteria for the events. Default is 'start,*order*'.<br/>Consisting of two parts, the sorting criteria and the sorting order (asc or desc)."
            example: 'cost,desc'
            nullable: false
            enum:
              - 'start,*order*'
              - 'name,*order*'
              - 'end,*order*'
              - 'cost,*order*'
              - 'attendees,*order*'
              - 'newest,*order*'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1932
                      name: 'Et qui unde et.'
                      description: 'Non inventore iusto facere possimus. Consequatur qui amet quasi animi aut sequi. Voluptatem et sit quibusdam aut odio. Voluptates exercitationem est aperiam quis est nulla.'
                      location: Jakubowskimouth
                      cost: 7
                      start_date: '2025-07-26 04:30:00'
                      end_date: '2025-08-11 00:00:00'
                      type: quasi
                      public: 'yes'
                      attendees_count: 1
                    -
                      id: 1933
                      name: 'Omnis totam aut et itaque nihil.'
                      description: 'Enim aut aut sequi saepe doloribus cupiditate. Labore quae quos ut in quos omnis quis. Aut quia voluptatem quasi voluptas. Maxime praesentium distinctio consectetur earum quis itaque. Architecto nihil distinctio molestiae dolore sunt ea.'
                      location: 'North Ciara'
                      cost: 3
                      start_date: '2025-07-17 05:30:00'
                      end_date: '2025-07-22 16:00:00'
                      type: enim
                      public: 'yes'
                      attendees_count: 1
                  links:
                    first: '/?page=1'
                    last: '/?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    last_page: 1
                    path: /
                    per_page: 10
                    total: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1932
                        name: 'Et qui unde et.'
                        description: 'Non inventore iusto facere possimus. Consequatur qui amet quasi animi aut sequi. Voluptatem et sit quibusdam aut odio. Voluptates exercitationem est aperiam quis est nulla.'
                        location: Jakubowskimouth
                        cost: 7
                        start_date: '2025-07-26 04:30:00'
                        end_date: '2025-08-11 00:00:00'
                        type: quasi
                        public: 'yes'
                        attendees_count: 1
                      -
                        id: 1933
                        name: 'Omnis totam aut et itaque nihil.'
                        description: 'Enim aut aut sequi saepe doloribus cupiditate. Labore quae quos ut in quos omnis quis. Aut quia voluptatem quasi voluptas. Maxime praesentium distinctio consectetur earum quis itaque. Architecto nihil distinctio molestiae dolore sunt ea.'
                        location: 'North Ciara'
                        cost: 3
                        start_date: '2025-07-17 05:30:00'
                        end_date: '2025-07-22 16:00:00'
                        type: enim
                        public: 'yes'
                        attendees_count: 1
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1932
                        name:
                          type: string
                          example: 'Et qui unde et.'
                        description:
                          type: string
                          example: 'Non inventore iusto facere possimus. Consequatur qui amet quasi animi aut sequi. Voluptatem et sit quibusdam aut odio. Voluptates exercitationem est aperiam quis est nulla.'
                        location:
                          type: string
                          example: Jakubowskimouth
                        cost:
                          type: integer
                          example: 7
                        start_date:
                          type: string
                          example: '2025-07-26 04:30:00'
                        end_date:
                          type: string
                          example: '2025-08-11 00:00:00'
                        type:
                          type: string
                          example: quasi
                        public:
                          type: string
                          example: 'yes'
                        attendees_count:
                          type: integer
                          example: 1
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: '/?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 10
                      total:
                        type: integer
                        example: 2
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The page 10 does not exist.'
                properties:
                  message:
                    type: string
                    example: 'The page 10 does not exist.'
      tags:
        - Events
      security: []
    parameters:
      -
        in: path
        name: organizer_id
        description: 'The ID of the organizer.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/users/{user}':
    get:
      summary: 'User Information'
      operationId: userInformation
      description: "Displays the profile of a user. If no user is specified, it shows the authenticated user's profile.<br/>\n(Only admins can see other users' profiles.)"
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'John Doe'
                    email: john@doe.com
                    country: USA
                    profession: Programmer
                    phone: 123-456-789
                    organization: 'World Incorporated'
                    tokens: 100
                    tokens_spend: 100
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'John Doe'
                      email:
                        type: string
                        example: john@doe.com
                      country:
                        type: string
                        example: USA
                      profession:
                        type: string
                        example: Programmer
                      phone:
                        type: string
                        example: 123-456-789
                      organization:
                        type: string
                        example: 'World Incorporated'
                      tokens:
                        type: integer
                        example: 100
                      tokens_spend:
                        type: integer
                        example: 100
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User not found.'
                properties:
                  message:
                    type: string
                    example: 'User not found.'
      tags:
        - 'User Management'
    parameters:
      -
        in: path
        name: user
        description: "Optional parameter. The ID of the user whose profile to retrieve. If not specified, retrieves the authenticated user's profile."
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '1'
